server:
  port: 8080

spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
    # URL pour H2, ici on utilise H2 en mode mémoire (in-memory)
    url: jdbc:h2:mem:accountsdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: password
    driver-class-name: org.h2.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update  # Changez à "create-drop" si vous voulez recréer la base à chaque démarrage
    database-platform: org.hibernate.dialect.H2Dialect  # Assurez-vous d'utiliser le bon dialecte H2

  sql:
    init:
      mode: always  # Pour exécuter les scripts de création de base de données au démarrage

  config:
    import: "optional:configserver:http://localhost:8071/"

  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"


  cloud:
    openfeign:
      circuitbreaker:
       enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Easy Bank Accounts Application"
    version: "1.0.0"
logging:
  level:
    com:
      easybank:
        accounts: DEBUG

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
